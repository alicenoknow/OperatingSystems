Zad 1 - kompletne
	Uruchomienie Makefile - komendy:
		- make static - kompiluje biblioteke w wersji statycznej
		- make shared - kompiluje biblioteke w wersji wspoldzielonej
		- make run - uruchamia przykadowy program z lista komend podana jako argument w pliku Makefile
		- make clean - usuwa zbedne pliki, po wykonaniu 'run' wywoła sie sama

Zad 2 - kompletne
	Uruchomienie Makefile - komendy:
		- make static - kompiluje bibloteke w wersji statycznej
		- make shared - kompiluje biblioteke w wersji wspoldzielonej
		- make run - uruchomi testy (zawarte w pliku  test2.c) i ich rezultat wypisze na konsole oraz zapisze do pliku raport2.txt, wymaga, aby wcześniej skompilować przy 		     pomocy 'make static' lub 'make shared'
		- make clean - usuwa zbedne pliki, po wykonaniu 'run' wywoła sie sama

Zad 3 - kompletne
	Uruchomienie Makefile - komendy:
		- make static - kompiluje biblioteke w wersji statycznej
		- make shared - kompiluje biblioteke w wersji wspoldzielonej
		- make dynamic - kompiluje biblioteke w wersji dynamicznej
		- make clean - usuwa zbedne pliki, po wykonaniu 'runA' oraz 'runB' wywoła sie sama
		- make runA - wykona testy z zadania 2 dla kazdej powyzszej mozliwosci kompilacji, wynik zapisze w pliku raport3a.txt
		- make runB - wykona testy z zadania 2 dla kazdej powyzszej mozliwosci kompilacji oraz dla czterech poziomow optymalizacji: brak, -O0, -O2, -Os, wynik zapisze w 		   pliku raport3b.txt
